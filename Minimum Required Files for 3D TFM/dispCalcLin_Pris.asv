function output = dispCalcLin_Pris(xp,C,U)
%
% Displacement at a prescribed point in a 2x2x2 rectangular prism
%
% xp = coordinates of the point
% 
% C = 8 x 3 matrix of the nodal coordinates
%
% -1 <= x <= 1; -1 <= y <= 1; -1 <= z <= 1; 
%
% Lx Ly Lz = x, y, z sides of cube
%
% U = 8 x 3, matrix of the nodal displacements with Allan Bower's convention for node numbering
%
%
% Z = -1
%
%     ^ y
%     |
%     |
%     |
%     |
%     4 ----------- 3
%     |             |
%     |             |
%     |             |
%     |             |
%     |             |
%     |             |
%     1 ----------- 2 ---------> x
%
%
% Z = 1
%
%     ^ y
%     |
%     |
%     |
%     |
%     8 ----------- 7
%     |             |
%     |             |
%     |             |
%     |             |
%     |             |
%     |             |
%     5 ----------- 6 ---------> x

%
%Convert into dimensionless coordinates
Lx=norm(C(1,:)-C(2,:));
Ly=norm(C(2,:)-C(3,:));
Lz=norm(C(1,:)-C(5,:));
x=(xp(1)-C(1,1))/Lx*2-1;
% shape functions
%
N(1,1)=(1-x)*(1-y)*(1-z)/8;
N(1,2)=(1-x)*(1-y)*(1-z)/8;
N(1,3)=(1+x)*(1+y)*(1-z)/8;
N(1,4)=(1-x)*(1+y)*(1-z)/8;
N(1,5)=(1-x)*(1-y)*(1+z)/8;
N(1,6)=(1+x)*(1-y)*(1+z)/8;
N(1,7)=(1+x)*(1+y)*(1+z)/8;
N(1,8)=(1-x)*(1+y)*(1+z)/8;

%
% normalize displacements
%

U(:,1) = 2*U(:,1)/Lx;
U(:,2) = 2*U(:,2)/Ly;
U(:,3) = 2*U(:,3)/Lz;

%
