function output = dispQuad(x,y,z,Lx,Ly,Lz,U)
%
% Displacement at a prescribed point in a 2x2x2 cube
%
% x y z = xi, eta, zeta for position in a cube:
%
% -1 <= x <= 1; -1 <= y <= 1; -1 <= z <= 1; 
%
% Lx Ly Lz = x, y, z sides of cube
%
% U = 8 x 3, with Allan Bower's convention for node numbering
%
%
% Z = -1
%
%     ^ y
%     |
%     |
%     |
%     |
%     4 ----------- 3
%     |             |
%     |             |
%     |             |
%     |             |
%     |             |
%     |             |
%     1 ----------- 2 ---------> x
%
%
% Z = 1
%
%     ^ y
%     |
%     |
%     |
%     |
%     8 ----------- 7
%     |             |
%     |             |
%     |             |
%     |             |
%     |             |
%     |             |
%     5 ----------- 6 ---------> x

%
% derivatives of shape functions
%
B(1,1) = -(1 - y)*(1 - z)/8;
B(2,1) = (1 - y)*(1 - z)/8;
B(3,1) = (1 + y)*(1 - z)/8;
B(4,1) = -(1 + y)*(1 - z)/8;
B(5,1) = -(1 - y)*(1 + z)/8;
B(6,1) = (1 - y)*(1 + z)/8;
B(7,1) = (1 + y)*(1 + z)/8;
B(8,1) = -(1 + y)*(1 + z)/8;

B(1,2) = (1 - x)*(-1)*(1 - z)/8;
B(2,2) = (1 + x)*(-1)*(1 - z)/8;
B(3,2) = (1 + x)*(1 - z)/8;
B(4,2) = (1 - x)*(1 - z)/8;
B(5,2) = (1 - x)*(-1)*(1 + z)/8;
B(6,2) = (1 + x)*(-1)*(1 + z)/8;
B(7,2) = (1 + x)*(1 + z)/8;
B(8,2) = (1 - x)*(1 + z)/8;

B(1,3) = (1 - x)*(1 - y)*(-1)/8;
B(2,3) = (1 + x)*(1 - y)*(-1)/8;
B(3,3) = (1 + x)*(1 + y)*(-1)/8;
B(4,3) = (1 - x)*(1 + y)*(-1)/8;
B(5,3) = (1 - x)*(1 - y)/8;
B(6,3) = (1 + x)*(1 - y)/8;
B(7,3) = (1 + x)*(1 + y)/8;
B(8,3) = (1 - x)*(1 + y)/8;

%
% normalize displacements
%

U(:,1) = 2*U(:,1)/Lx;
U(:,2) = 2*U(:,2)/Ly;
U(:,3) = 2*U(:,3)/Lz;

%
% deformation gradient
%
F = eye(3);
for i = 1:3
    for j = 1:3
        for k = 1:8
            F(i,j) = F(i,j) + B(k,j) * U(k,i);
        end
    end
end
%
% strain
%
output = 0.5*(F'*F - eye(3));