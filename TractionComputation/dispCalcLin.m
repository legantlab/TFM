function [u]=dispCalcLin(N,U,X)
    
    %Initialize displacement vector
    u=zeros(1,3);
    
    % N = a 3X4 matrix with the coordinates of each node as each column
    % U = a matrix with the displacements of each node as each column
    % X = a vector with of the coordinates for the point
    
    %Calculate volume of tetrahedron
    sixV=N(1,1)*N(2,2)*N(3,3)-N(1,1)*N(2,2)*N(3,4)-N(1,1)*N(3,2)*N(2,3)+N(1,1)*N(3,2)*N(2,4)+N(1,1)*N(2,3)*N(3,4)-N(1,1)*N(2,4)*N(3,3)-N(2,1)*N(1,2)*N(3,3)...
        +N(2,1)*N(1,2)*N(3,4)+N(2,1)*N(3,2)*N(1,3)-N(2,1)*N(3,2)*N(1,4)-N(2,1)*N(1,3)*N(3,4)+N(2,1)*N(1,4)*N(3,3)+N(3,1)*N(1,2)*N(2,3)-N(3,1)*N(1,2)*N(2,4)...
        -N(3,1)*N(2,2)*N(1,3)+N(3,1)*N(2,2)*N(1,4)+N(3,1)*N(1,3)*N(2,4)-N(3,1)*N(1,4)*N(2,3)-N(1,2)*N(2,3)*N(3,4)+N(1,2)*N(2,4)*N(3,3)+N(2,2)*N(1,3)*N(3,4)...
        -N(2,2)*N(1,4)*N(3,3)-N(3,2)*N(1,3)*N(2,4)+N(3,2)*N(1,4)*N(2,3);
    
    %Calculate shape functions
        % 1st shape function
            
            a1=-N(1,2)*N(2,3)*N(3,4)+N(1,2)*N(2,4)*N(3,3)+N(2,2)*N(1,3)*N(3,4)-N(2,2)*N(1,4)*N(3,3)-N(3,2)*N(1,3)*N(2,4)+N(3,2)*N(1,4)*N(2,3);
            b1=N(2,2)*N(3,3)-N(2,2)*N(3,4)-N(3,2)*N(2,3)+N(3,2)*N(2,4)+N(2,3)*N(3,4)-N(2,4)*N(3,3);
            c1=-N(1,2)*N(3,3)+N(1,2)*N(3,4)+N(3,2)*N(1,3)-N(3,2)*N(1,4)-N(1,3)*N(3,4)+N(1,4)*N(3,3);
            d1=N(1,2)*N(2,3)-N(1,2)*N(2,4)-N(2,2)*N(1,3)+N(2,2)*N(1,4)+N(1,3)*N(2,4)-N(1,4)*N(2,3);
            
            L1=(a1+b1*X(1)+c1*X(2)+d1*X(3))/sixV;        

        % 2nd shape function
            
            a2=N(1,1)*N(2,3)*N(3,4)-N(1,1)*N(2,4)*N(3,3)-N(2,1)*N(1,3)*N(3,4)+N(2,1)*N(1,4)*N(3,3)+N(3,1)*N(1,3)*N(2,4)-N(3,1)*N(1,4)*N(2,3);
            b2=-N(2,1)*N(3,3)+N(2,1)*N(3,4)+N(3,1)*N(2,3)-N(3,1)*N(2,4)-N(2,3)*N(3,4)+N(2,4)*N(3,3);
            c2=N(1,1)*N(3,3)-N(1,1)*N(3,4)-N(3,1)*N(1,3)+N(3,1)*N(1,4)+N(1,3)*N(3,4)-N(1,4)*N(3,3);
            d2=-N(1,1)*N(2,3)+N(1,1)*N(2,4)+N(2,1)*N(1,3)-N(2,1)*N(1,4)-N(1,3)*N(2,4)+N(1,4)*N(2,3);
            
            L2=(a2+b2*X(1)+c2*X(2)+d2*X(3))/sixV; 
            
        % 3rd shape function
 
            a3=-N(1,1)*N(2,2)*N(3,4)+N(1,1)*N(3,2)*N(2,4)+N(2,1)*N(1,2)*N(3,4)-N(2,1)*N(3,2)*N(1,4)-N(3,1)*N(1,2)*N(2,4)+N(3,1)*N(2,2)*N(1,4);
            b3=N(2,1)*N(3,2)-N(2,1)*N(3,4)-N(3,1)*N(2,2)+N(3,1)*N(2,4)+N(2,2)*N(3,4)-N(3,2)*N(2,4);
            c3=-N(1,1)*N(3,2)+N(1,1)*N(3,4)+N(3,1)*N(1,2)-N(3,1)*N(1,4)-N(1,2)*N(3,4)+N(3,2)*N(1,4);
            d3=N(1,1)*N(2,2)-N(1,1)*N(2,4)-N(2,1)*N(1,2)+N(2,1)*N(1,4)+N(1,2)*N(2,4)-N(2,2)*N(1,4);
            
            L3=(a3+b3*X(1)+c3*X(2)+d3*X(3))/sixV;
            
        % 4th shape function

            a4=N(1,1)*N(2,2)*N(3,3)-N(1,1)*N(3,2)*N(2,3)-N(2,1)*N(1,2)*N(3,3)+N(2,1)*N(3,2)*N(1,3)+N(3,1)*N(1,2)*N(2,3)-N(3,1)*N(2,2)*N(1,3);
            b4=-N(2,1)*N(3,2)+N(2,1)*N(3,3)+N(3,1)*N(2,2)-N(3,1)*N(2,3)-N(2,2)*N(3,3)+N(3,2)*N(2,3);
            c4=N(1,1)*N(3,2)-N(1,1)*N(3,3)-N(3,1)*N(1,2)+N(3,1)*N(1,3)+N(1,2)*N(3,3)-N(3,2)*N(1,3);
            d4=-N(1,1)*N(2,2)+N(1,1)*N(2,3)+N(2,1)*N(1,2)-N(2,1)*N(1,3)-N(1,2)*N(2,3)+N(2,2)*N(1,3);
            
            L4=(a4+b4*X(1)+c4*X(2)+d4*X(3))/sixV;
            
            
  %Calculate displacement at point
        u=[L1,L2,L3,L4]*U';
  
end
            
